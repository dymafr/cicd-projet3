name: CI/CD workflow

env:
  SERVER_USER: "root"
  SERVER_IP: "54.37.11.162"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main

jobs:
  tests_backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: checkout le code
        uses: actions/checkout@v4

      - name: installer Node.js
        uses: actions/setup-node@v3
        with:
          cache: "npm"
          cache-dependency-path: server/package-lock.json

      - name: installer les dépendances
        run: |
          npm ci --prefer-offline

      - name: exécute les tests
        run: |
          npm run test:ci

      - name: vérifie le code
        run: |
          npm run lint

      - name: vérifie les vulnérabilités
        run: |
          npm audit --fix

      - name: Upload du rapport de couverture sur Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  checks_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: checkout le code
        uses: actions/checkout@v4

      - name: installer Node.js
        uses: actions/setup-node@v3
        with:
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: installer les dépendances
        run: |
          npm ci --prefer-offline

      - name: vérifie les vulnérabilités
        run: |
          cd client
          npm audit

      - name: vérifie le code
        run: |
          cd client
          npm run lint

  build_frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    needs: [checks_frontend]
    steps:
      - name: checkout le code
        uses: actions/checkout@v4

      - name: installer Node.js
        uses: actions/setup-node@v3
        with:
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: installer les dépendances
        run: |
          npm ci --prefer-offline

      - name: build le frontend
        run: |
          npm run build

      - name: archiver les artefacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: client/dist/
          retention-days: 1

  build_frontend_e2e:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    needs: [checks_frontend]
    steps:
      - name: checkout le code
        uses: actions/checkout@v4

      - name: installer Node.js
        uses: actions/setup-node@v3
        with:
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: installer les dépendances
        run: |
          npm ci --prefer-offline

      - name: build le frontend
        run: |
          npm run build:e2e

      - name: archiver les artefacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist-e2e
          path: client/dist/
          retention-days: 1

  test_e2e:
    runs-on: ubuntu-latest
    needs: [build_frontend_e2e]
    strategy:
      matrix:
        browser: ["chrome", "firefox", "edge"]
    steps:
      - name: checkout le code
        uses: actions/checkout@v4

      - name: installer Node.js
        uses: actions/setup-node@v3
        with:
          cache: "npm"
          cache-dependency-path: server/package-lock.json

      - name: récupérer l'artéfact du frontend pour les tests e2e
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist-e2e
          path: ./client/dist

      - name: installer les dépendances serveur
        run: |
          cd server
          npm ci --prefer-offline

      - name: lancer le serveur backend
        run: |
          cd server
          node index.js &

      - name: Cypress
        uses: cypress-io/github-action@v6
        with:
          working-directory: client
          browser: ${{ matrix.browser }}
          start: npm run preview
          wait-on: http://localhost:4173
          wait-on-timeout: 60
          config: baseUrl=http://localhost:4173

      - name: Upload du rapport de couverture sur Codecov
        if: matrix.browser == 'chrome' # pour ne pas uploader 3 fois le rapport
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    needs: [test_e2e, build_frontend, tests_backend]
    runs-on: ubuntu-latest
    steps:
      - name: checkout le code
        uses: actions/checkout@v4

      - name: télécharger l'artéfact du frontend
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: ./dist

      - name: déployer sur le serveur
        run: |
          eval $(ssh-agent -s)
          ssh-add - <<< "${{ secrets.OVH_PROD_PKEY }}"
          mkdir -p ~/.ssh
          ssh-keyscan -H SERVER_IP >> ~/.ssh/known_hosts
          scp -r ./dist SERVER_USER@SERVER_IP:/var/www
          scp -r ./server SERVER_USER@SERVER_IP:/var/www
          ssh SERVER_USER@SERVER_IP "cd /var/www/server && npm install --omit=dev"
          ssh SERVER_USER@SERVER_IP "cd /var/www/server && pm2 startOrRestart ecosystem.config.js --env production && pm2 save"
